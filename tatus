[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 123ae94..7cda9ce 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -25,3 +25,6 @@[m [mbuild/Release[m
 # Dependency directory[m
 # https://www.npmjs.org/doc/misc/npm-faq.html#should-i-check-my-node_modules-folder-into-git[m
 node_modules[m
[32m+[m
[32m+[m[32m# Tests[m
[32m+[m[32mxunit.xml[m
[1mdiff --git a/app/client/scripts/app.js b/app/client/scripts/app.js[m
[1mindex aaf34a1..ff00ac4 100644[m
[1m--- a/app/client/scripts/app.js[m
[1m+++ b/app/client/scripts/app.js[m
[36m@@ -19,8 +19,23 @@[m [mapplication.controller('Controller', ['$scope', '$http', '$interval', function($[m
       then(function(res) {[m
           var results = res.data.results;[m
           results.forEach(function (item) {[m
[31m-            item['days'] = Math.floor(([m
[31m-              new Date() - new Date(item['Completion Date']))/1000/60/60/24);[m
[32m+[m
[32m+[m[32m            // Results[m
[32m+[m[32m            var res = item['Study Results'];[m
[32m+[m[32m            if (!res) {[m
[32m+[m[32m                res = 'No results';[m
[32m+[m[32m            }[m
[32m+[m[32m            item['_results'] = res;[m
[32m+[m
[32m+[m[32m            // Days[m
[32m+[m[32m            var days = null;[m
[32m+[m[32m            if (item['Completion Date']) {[m
[32m+[m[32m              var today = new Date();[m
[32m+[m[32m              var compl = new Date(item['Completion Date']);[m
[32m+[m[32m              days = Math.floor((today - compl)/1000/60/60/24);[m
[32m+[m[32m            }[m
[32m+[m[32m            item['_days'] = (days > 0) ? days : null;[m
[32m+[m
           });[m
           $scope.results = results;[m
       }, function(res) {[m
[1mdiff --git a/app/services/data.js b/app/services/data.js[m
[1mindex 4ea306a..a0345e2 100644[m
[1m--- a/app/services/data.js[m
[1m+++ b/app/services/data.js[m
[36m@@ -49,6 +49,9 @@[m [mfunction parseData(data) {[m
 function cleanData(data) {[m
   return new Promise(function(resolve, reject) {[m
     data.forEach(function(item) {[m
[32m+[m[32m      Object.keys(item).forEach(function (key) {[m
[32m+[m[32m        item[key] = cleanNull(item[key]);[m
[32m+[m[32m      });[m
       item['Conditions'] = cleanArray(item['Conditions']);[m
       item['Interventions'] = cleanArray(item['Interventions']);[m
       item['Sponsor/Collaborators'] = cleanArray(item['Sponsor/Collaborators']);[m
[36m@@ -63,7 +66,17 @@[m [mfunction cleanData(data) {[m
   });[m
 }[m
 [m
[32m+[m[32mfunction cleanNull(value) {[m
[32m+[m[32m    if (value === 'Null') {[m
[32m+[m[32m        value = null;[m
[32m+[m[32m    }[m
[32m+[m[32m    return value;[m
[32m+[m[32m}[m
[32m+[m
 function cleanArray(value) {[m
[32m+[m[32m  if (value === null) {[m
[32m+[m[32m      return value;[m
[32m+[m[32m  }[m
   try {[m
     value = value.split('|');[m
   } catch (err) {[m
[36m@@ -73,6 +86,9 @@[m [mfunction cleanArray(value) {[m
 }[m
 [m
 function cleanDate(value) {[m
[32m+[m[32m  if (value === null) {[m
[32m+[m[32m      return value;[m
[32m+[m[32m  }[m
   try {[m
     // Join with "-" to make it ISO format with UTC[m
     value = new Date(value.split('/').reverse().join('-'));[m
[1mdiff --git a/app/views/index.html b/app/views/index.html[m
[1mindex d6707b7..ae5b3dc 100644[m
[1m--- a/app/views/index.html[m
[1m+++ b/app/views/index.html[m
[36m@@ -26,11 +26,11 @@[m
           <span class="glyphicon glyphicon-calendar"></span>[m
           {{ result['Completion Date'] | date:'MMMM d, yyyy' }}[m
         </span>[m
[31m-        <span class="badge" data-ng-if="result['Study Results']">[m
[31m-          {{ result['Study Results'] }}[m
[32m+[m[32m        <span class="badge" data-ng-if="result['_results']">[m
[32m+[m[32m          {{ result['_results'] }}[m
         </span>[m
[31m-        <span class="badge" data-ng-if="result['days'] > 0">[m
[31m-          {{ result['days'] }} days since completed[m
[32m+[m[32m        <span class="badge" data-ng-if="result['_days']">[m
[32m+[m[32m          {{ result['_days'] }} days since completed[m
         </span>[m
       </div>[m
       <hr>[m
[1mdiff --git a/tests/unit/data.js b/tests/unit/data.js[m
[1mindex c6397ef..8dcdf9f 100644[m
[1m--- a/tests/unit/data.js[m
[1m+++ b/tests/unit/data.js[m
[36m@@ -15,32 +15,33 @@[m [mdescribe('Data Service', function() {[m
     });[m
   });[m
 [m
[31m-  // it('Should get the right object with id 3', function (done) {[m
[31m-    // services.data.get().then(function(data) {[m
[31m-      // var item = lodash.find(data, function(value) {[m
[31m-        // if (value.Nul === 3) return true;[m
[31m-      // });[m
[31m-      // assert.ok(item);[m
[31m-      // assert.strictEqual(item['Nul'], 3);[m
[31m-      // assert.strictEqual(item['Trial ID'], 'NCT02342171');[m
[31m-      // assert.strictEqual(item['Title'], 'Emergency Evaluation of Convalescent Plasma for Ebola Viral Disease (EVD) in Guinea');[m
[31m-      // assert.strictEqual(item['Recruitment'], 'Completed');[m
[31m-      // assert.strictEqual(item['Study Results'], 'No Results Available');[m
[31m-      // assert.deepEqual(item['Conditions'], ['Hemorrhagic Fever, Ebola']);[m
[31m-      // assert.deepEqual(item['Interventions'], ['Other: Convalescent Plasma']);[m
[31m-      // assert.isArray(item['Sponsor/Collaborators']);[m
[31m-      // assert.strictEqual(item['Sponsor/Collaborators'][0], 'Institute of Tropical Medicine, Belgium');[m
[31m-      // assert.deepEqual(item['Age Groups'], ['Child', 'Adult', 'Senior']);[m
[31m-      // assert.deepEqual(item['Phases'], ['Phase 2', 'Phase 3']);[m
[31m-      // assert.strictEqual(item['Enrollment'], 102);[m
[31m-      // assert.deepEqual(item['Funded Bys'], ['Other']);[m
[31m-      // assert.strictEqual(item['Start Date'].getTime(), (new Date('2015-02-15')).getTime());[m
[31m-      // assert.strictEqual(item['Completion Date'].getTime(), (new Date('2015-07-15')).getTime());[m
[31m-      // assert.strictEqual(item['Results First Received'], 'No Study Results Posted');[m
[31m-      // assert.strictEqual(item['Primary Completion Date'].getTime(), (new Date('2015-07-15')).getTime());[m
[31m-      // assert.strictEqual(item['URL'], 'https://ClinicalTrials.gov/show/NCT02342171');[m
[31m-      // done();[m
[31m-    // });[m
[31m-  // });[m
[32m+[m[32m  it('Should get the right object with id=3NCT02342171', function (done) {[m
[32m+[m[32m    services.data.get().then(function(data) {[m
[32m+[m[32m      var item = lodash.find(data, function(value) {[m
[32m+[m[32m        if (value['Trial ID'] === 'NCT02342171') return true;[m
[32m+[m[32m      });[m
[32m+[m[32m      assert.ok(item, 'trial found');[m
[32m+[m[32m      assert.strictEqual(item['Trial ID'], 'NCT02342171');[m
[32m+[m[32m      assert.strictEqual(item['Title'], 'Emergency Evaluation of Convalescent Plasma for Ebola Viral Disease (EVD) in Guinea');[m
[32m+[m[32m      assert.strictEqual(item['Recruitment'], 'Completed');[m
[32m+[m[32m      assert.strictEqual(item['Study Results'], null);[m
[32m+[m[32m      assert.deepEqual(item['Conditions'], ['Hemorrhagic Fever, Ebola']);[m
[32m+[m[32m      assert.deepEqual(item['Interventions'], ['Other: Convalescent Plasma']);[m
[32m+[m[32m      assert.isArray(item['Sponsor/Collaborators']);[m
[32m+[m[32m      assert.strictEqual(item['Sponsor/Collaborators'][0], 'Institute of Tropical Medicine, Belgium');[m
[32m+[m[32m      assert.deepEqual(item['Age Groups'], ['Child', 'Adult', 'Senior']);[m
[32m+[m[32m      assert.deepEqual(item['Phases'], ['Phase 2', 'Phase 3']);[m
[32m+[m[32m      assert.strictEqual(item['Enrollment'], 102);[m
[32m+[m[32m      assert.deepEqual(item['Funded Bys'], ['Other']);[m
[32m+[m[32m      assert.strictEqual(item['Start Date'].getTime(), (new Date('2015-02-01')).getTime());[m
[32m+[m[32m      assert.strictEqual(item['Completion Date'].getTime(), (new Date('2015-07-01')).getTime());[m
[32m+[m[32m      assert.strictEqual(item['Results First Received'], null);[m
[32m+[m[32m      assert.strictEqual(item['Primary Completion Date'].getTime(), (new Date('2015-07-01')).getTime());[m
[32m+[m[32m      assert.strictEqual(item['Country'], 'Guinea');[m
[32m+[m[32m      assert.strictEqual(item['Source'], 'Clinical Trials');[m
[32m+[m[32m      assert.strictEqual(item['URL'], 'https://ClinicalTrials.gov/show/NCT02342171');[m
[32m+[m[32m      done();[m
[32m+[m[32m    });[m
[32m+[m[32m  });[m
 [m
 });[m
